{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastrar","_limparFormulario","mensagem","importa","Negociacao","DateHelper","textoParaData","value","focus","apagaTodos","esvazia","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n\r\n  constructor() {\r\n    this.$ = document.querySelector.bind(document);\r\n    this._inputData = this.$(\"#data\");\r\n    this._inputQuantidade = this.$(\"#quantidade\");\r\n    this._inputValor = this.$(\"#valor\");\r\n\r\n    this._listaNegociacoes = new Bind(new ListaNegociacoes(), new NegociacoesView(this.$(\"#negociacoesView\")), 'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n\r\n    this._mensagem = new Bind(new Mensagem(), new MensagemView(this.$(\"#mensagemView\")), 'texto');\r\n\r\n    this._ordemAtual = '';\r\n\r\n    this._service = new NegociacaoService();\r\n\r\n    this._init();\r\n\r\n    // ConnectionFactory.getConnection()\r\n    //   .then(connection => {\r\n    //     new NegociacaoDAO(connection)\r\n    //       .listaTodos()\r\n    //       .then(negociacoes => negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao)));\r\n    //   });\r\n\r\n\r\n    // this._listaNegociacoes = new ListaNegociacoes(function(model) {\r\n    //   this._negociacoesView.update(model);\r\n    // }.bind(this));\r\n    // estou usando bind, mas dá pra usar o Reflect.apply, ele pede a função que quero executar\r\n    // e qual o contexto que essa função deve ser executada\r\n    //  Dá pra usar a arrow function, o this da => não é dinâmico\r\n\r\n\r\n  }\r\n\r\n  _init() {\r\n    this._service.lista()\r\n      .then(negociacoes =>\r\n        negociacoes.forEach(negociacao =>\r\n          this._listaNegociacoes.adiciona(negociacao)))\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        this._mensagem.texto = erro;\r\n      });\r\n\r\n    setInterval(() => this.importaNegociacoes(), 3000);\r\n  }\r\n\r\n  adiciona(event) {\r\n    event.preventDefault();\r\n    let negociacao = this._criaNegociacao();\r\n    this._service.cadastrar(negociacao)\r\n      .then(mensagem => {\r\n        this._listaNegociacoes.adiciona(negociacao);\r\n        this._limparFormulario();\r\n        this._mensagem.texto = mensagem;\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n\r\n    // ConnectionFactory\r\n    //   .getConnection()\r\n    //   .then(connection => {\r\n    //     let negociacao = this._criaNegociacao();\r\n    //     new NegociacaoDAO(connection)\r\n    //       .adiciona(negociacao)\r\n    //       .then(() => {\r\n    //         this._listaNegociacoes.adiciona(this._criaNegociacao());\r\n    //         this._limparFormulario();\r\n    //         this._mensagem.texto = \"Negociação adicionada com sucesso\";\r\n    //       });\r\n    //   })\r\n    //   .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n\r\n  importaNegociacoes() {\r\n\r\n    this._service.importa(this._listaNegociacoes.negociacoes)\r\n      .then(negociacoes => {\r\n        negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n        this._mensagem.texto = \"Negociações importadas com sucesso.\"\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n\r\n    // Promise.all([service.obterNegociacoesDaSemana(), service.obterNegociacoesDaSemanaPassada(),\r\n    //     service.obterNegociacoesDaSemanaRetrasada()\r\n    //   ]).then(arrayNegociacoes => {\r\n    //     arrayNegociacoes\r\n    //       .reduce((arrayRetorno, array) => arrayRetorno.concat(array), [])\r\n    //       .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\"\r\n    //   })\r\n    //   .catch(erro => this._mensagem.texto = erro);\r\n\r\n    // service.obterNegociacoesDaSemana()\r\n    // .then(negociacoes => {\r\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\r\n    //   })\r\n    //   .catch(erro => this._mensagem.texto = erro);\r\n    // service.obterNegociacoesDaSemanaPassada()\r\n    // .then(negociacoes => {\r\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\r\n    //   })\r\n    //   .catch(erro => this._mensagem.texto = erro);\r\n    // service.obterNegociacoesDaSemanaRetrasada()\r\n    // .then(negociacoes => {\r\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\r\n    //   })\r\n    //   .catch(erro => this._mensagem.texto = erro);\r\n\r\n    // service.obterNegociacoesDaSemana((erro, negociacoes) => {\r\n    //   if (erro) {\r\n    //     this._mensagem.texto = erro\r\n    //     return;\r\n    //   } else {\r\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\"\r\n    //   }\r\n    // });\r\n\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(DateHelper.textoParaData(this._inputData.value), this._inputQuantidade.value,\r\n      this._inputValor.value);\r\n  }\r\n\r\n  _limparFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = 1;\r\n    this._inputValor.value = 0.0;\r\n    this._inputData.focus();\r\n  }\r\n\r\n  apaga() {\r\n\r\n    this._service.apagaTodos()\r\n      .then(mensagem => {\r\n        this._mensagem.texto = mensagem;\r\n        this._listaNegociacoes.esvazia();\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  ordena(coluna) {\r\n    if (coluna == this._ordemAtual) {\r\n      this._listaNegociacoes.inverteOrdem();\r\n    } else {\r\n      this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n    }\r\n    this._ordemAtual = coluna;\r\n  }\r\n\r\n\r\n}\r\n"]}
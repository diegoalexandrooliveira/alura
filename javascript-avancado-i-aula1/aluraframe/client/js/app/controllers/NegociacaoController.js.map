{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastrar","_limparFormulario","mensagem","importa","Negociacao","DateHelper","textoParaData","value","focus","apagaTodos","esvazia","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n  constructor() {\n    this.$ = document.querySelector.bind(document);\n    this._inputData = this.$(\"#data\");\n    this._inputQuantidade = this.$(\"#quantidade\");\n    this._inputValor = this.$(\"#valor\");\n\n    this._listaNegociacoes = new Bind(new ListaNegociacoes(), new NegociacoesView(this.$(\"#negociacoesView\")), 'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n\n    this._mensagem = new Bind(new Mensagem(), new MensagemView(this.$(\"#mensagemView\")), 'texto');\n\n    this._ordemAtual = '';\n\n    this._service = new NegociacaoService();\n\n    this._init();\n\n    // ConnectionFactory.getConnection()\n    //   .then(connection => {\n    //     new NegociacaoDAO(connection)\n    //       .listaTodos()\n    //       .then(negociacoes => negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao)));\n    //   });\n\n\n    // this._listaNegociacoes = new ListaNegociacoes(function(model) {\n    //   this._negociacoesView.update(model);\n    // }.bind(this));\n    // estou usando bind, mas dá pra usar o Reflect.apply, ele pede a função que quero executar\n    // e qual o contexto que essa função deve ser executada\n    //  Dá pra usar a arrow function, o this da => não é dinâmico\n\n\n  }\n\n  _init() {\n    this._service.lista()\n      .then(negociacoes =>\n        negociacoes.forEach(negociacao =>\n          this._listaNegociacoes.adiciona(negociacao)))\n      .catch(erro => {\n        console.log(erro);\n        this._mensagem.texto = erro;\n      });\n\n    setInterval(() => this.importaNegociacoes(), 3000);\n  }\n\n  adiciona(event) {\n    event.preventDefault();\n    let negociacao = this._criaNegociacao();\n    this._service.cadastrar(negociacao)\n      .then(mensagem => {\n        this._listaNegociacoes.adiciona(negociacao);\n        this._limparFormulario();\n        this._mensagem.texto = mensagem;\n      })\n      .catch(erro => this._mensagem.texto = erro);\n\n    // ConnectionFactory\n    //   .getConnection()\n    //   .then(connection => {\n    //     let negociacao = this._criaNegociacao();\n    //     new NegociacaoDAO(connection)\n    //       .adiciona(negociacao)\n    //       .then(() => {\n    //         this._listaNegociacoes.adiciona(this._criaNegociacao());\n    //         this._limparFormulario();\n    //         this._mensagem.texto = \"Negociação adicionada com sucesso\";\n    //       });\n    //   })\n    //   .catch(erro => this._mensagem.texto = erro);\n  }\n\n\n  importaNegociacoes() {\n\n    this._service.importa(this._listaNegociacoes.negociacoes)\n      .then(negociacoes => {\n        negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n        this._mensagem.texto = \"Negociações importadas com sucesso.\"\n      })\n      .catch(erro => this._mensagem.texto = erro);\n\n    // Promise.all([service.obterNegociacoesDaSemana(), service.obterNegociacoesDaSemanaPassada(),\n    //     service.obterNegociacoesDaSemanaRetrasada()\n    //   ]).then(arrayNegociacoes => {\n    //     arrayNegociacoes\n    //       .reduce((arrayRetorno, array) => arrayRetorno.concat(array), [])\n    //       .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\"\n    //   })\n    //   .catch(erro => this._mensagem.texto = erro);\n\n    // service.obterNegociacoesDaSemana()\n    // .then(negociacoes => {\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\n    //   })\n    //   .catch(erro => this._mensagem.texto = erro);\n    // service.obterNegociacoesDaSemanaPassada()\n    // .then(negociacoes => {\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\n    //   })\n    //   .catch(erro => this._mensagem.texto = erro);\n    // service.obterNegociacoesDaSemanaRetrasada()\n    // .then(negociacoes => {\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\";\n    //   })\n    //   .catch(erro => this._mensagem.texto = erro);\n\n    // service.obterNegociacoesDaSemana((erro, negociacoes) => {\n    //   if (erro) {\n    //     this._mensagem.texto = erro\n    //     return;\n    //   } else {\n    //     negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n    //     this._mensagem.texto = \"Negociações importadas com sucesso.\"\n    //   }\n    // });\n\n  }\n\n  _criaNegociacao() {\n    return new Negociacao(DateHelper.textoParaData(this._inputData.value), this._inputQuantidade.value,\n      this._inputValor.value);\n  }\n\n  _limparFormulario() {\n    this._inputData.value = \"\";\n    this._inputQuantidade.value = 1;\n    this._inputValor.value = 0.0;\n    this._inputData.focus();\n  }\n\n  apaga() {\n\n    this._service.apagaTodos()\n      .then(mensagem => {\n        this._mensagem.texto = mensagem;\n        this._listaNegociacoes.esvazia();\n      })\n      .catch(erro => this._mensagem.texto = erro);\n  }\n\n  ordena(coluna) {\n    if (coluna == this._ordemAtual) {\n      this._listaNegociacoes.inverteOrdem();\n    } else {\n      this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n    }\n    this._ordemAtual = coluna;\n  }\n\n\n}\n"]}
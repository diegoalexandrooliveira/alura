{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;kCAEcC,G,EAAK;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,aAAOH,GAAP;AACD;;;wBAEGI,G,EAAK;AAAA;;AACP,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OADD,EAEJM,IAFI,CAEC;AAAA,eAAON,IAAIQ,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,aAAOJ,MAAMD,GAAN,EAAW;AAChBM,iBAAS;AACP,0BAAgB;AADT,SADO;AAIhBC,gBAAQ,MAJQ;AAKhBC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AALU,OAAX,EAONH,IAPM,CAOD;AAAA,eAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OAPC,CAAP;AAQD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HttpService.js","sourcesContent":["class HttpService {\n\n\n  // get(url) {\n  //   return new Promise((resolve, reject) => {\n  //     let xhr = new XMLHttpRequest();\n  //     xhr.open(\"GET\", url);\n  //\n  //     xhr.onreadystatechange = () => {\n  //       /*\n  //       Estados de uma requisição\n  //       0: requisição ainda não iniciada\n  //       1: conexão com o servidor estabelecida\n  //       2: requisição recebida\n  //       3: processando requisição\n  //       4: requisição concluída e a resposta está pronta\n  //       */\n  //       if (xhr.readyState == 4) {\n  //         if (xhr.status == 200) {\n  //           resolve(JSON.parse(xhr.responseText));\n  //         } else {\n  //           reject(xhr.responseText);\n  //         }\n  //       }\n  //     }\n  //\n  //     xhr.send();\n  //   });\n  // }\n\n  _handleErrors(res) {\n    if (!res.ok) throw new Error(res.statusText);\n    return res;\n  }\n\n  get(url) {\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n  }\n\n  post(url, dado) {\n    return fetch(url, {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(dado)\n    })\n    .then(res => this._handleErrors(res));\n  }\n\n  // post(url, dado) {\n  //\n  //\n  //   return new Promise((resolve, reject) => {\n  //\n  //     let xhr = new XMLHttpRequest();\n  //     xhr.open(\"POST\", url, true);\n  //     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  //\n  //     xhr.onreadystatechange = () => {\n  //       /*\n  //       Estados de uma requisição\n  //       0: requisição ainda não iniciada\n  //       1: conexão com o servidor estabelecida\n  //       2: requisição recebida\n  //       3: processando requisição\n  //       4: requisição concluída e a resposta está pronta\n  //       */\n  //       if (xhr.readyState == 4) {\n  //         if (xhr.status == 200) {\n  //           resolve(JSON.parse(xhr.responseText));\n  //         } else {\n  //           reject(xhr.responseText);\n  //         }\n  //       }\n  //     }\n  //\n  //     xhr.send(JSON.stringify(dado));\n  //\n  //   });\n  //\n  // }\n\n}\n"]}
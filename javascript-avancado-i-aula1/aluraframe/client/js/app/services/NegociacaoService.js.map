{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaPassada","obterNegociacoesDaSemanaRetrasada","then","negociacoes","semanas","reduce","retorno","semana","concat","catch","Error","erro","resolve","reject","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoLista"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {\n  HttpService\n} from './HttpService';\nimport {\n  ConnectionFactory\n} from './ConnectionFactory';\nimport {\n  NegociacaoDAO\n} from '../dao/NegociacaoDAO';\nimport {\n  Negociacao\n} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  obterNegociacoes() {\n    return Promise.all([this.obterNegociacoesDaSemana(), this.obterNegociacoesDaSemanaPassada(),\n        this.obterNegociacoesDaSemanaRetrasada()\n      ])\n      .then(semanas => {\n        let negociacoes = semanas.reduce((retorno, semana) =>\n          retorno.concat(semana), []);\n        return negociacoes;\n      })\n      .catch(erro => {\n        throw new Error(erro)\n      });\n  }\n\n\n  obterNegociacoesDaSemana() {\n\n    return new Promise((resolve, reject) => {\n\n      this._http.get(\"negociacoes/semana\")\n        .then(negociacoes =>\n          resolve(negociacoes.map(objeto =>\n            new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n        ).catch(erro => {\n          console.log(erro);\n          reject(\"Não foi possível importar as negociações da semana\");\n        })\n\n    });\n  }\n  obterNegociacoesDaSemanaPassada() {\n    return new Promise((resolve, reject) => {\n\n      this._http.get(\"negociacoes/anterior\").then(negociacoes =>\n        resolve(negociacoes.map(objeto =>\n          new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n      ).catch(erro => {\n        console.log(erro);\n        reject(\"Não foi possível importar as negociações da semana passada\");\n      })\n\n    });\n  }\n  obterNegociacoesDaSemanaRetrasada() {\n\n    return new Promise((resolve, reject) => {\n\n      this._http.get(\"negociacoes/retrasada\").then(negociacoes =>\n        resolve(negociacoes.map(objeto =>\n          new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n      ).catch(erro => {\n        console.log(erro);\n        reject(\"Não foi possível importar as negociações da semana retrasada\");\n      })\n\n    });\n  }\n\n  cadastrar(negociacao) {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDAO(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => 'Negociação adicionada com sucesso.')\n      .catch(() => {\n        console.log(erro);\n        throw new Error('Não foi possível adicionar a negociação.')\n      });\n  }\n\n  lista() {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDAO(connection))\n      .then(dao => dao.listaTodos())\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociacões.')\n      });\n  }\n\n  apagaTodos() {\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDAO(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => 'Negociações apagadas com sucesso.')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível apagar as negociações.');\n      });\n  }\n\n  importa(listaAtual) {\n    return this.obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(negociacao =>\n          !listaAtual.some(negociacaoLista =>\n            JSON.stringify(negociacaoLista) == JSON.stringify(negociacao))))\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível importar as negociações');\n      });\n  }\n\n}\n"]}
{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;IAAMA,a;AACJ,yBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;AAIAI,gBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,SAFD;AAGAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,0CAAP;AACD,SAHD;AAID,OAbM,CAAP;AAcD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACVO,WADU,CACE,OAAKP,MADP,EAEViB,UAFU,EAAb;;AAIA,YAAIC,cAAc,EAAlB;;AAEAF,eAAOP,SAAP,GAAmB,aAAK;AACtB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,cAAID,KAAJ,EAAW;AACT,gBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,wBAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,kBAAMS,QAAN;AACD,WAJD,MAIO;AACLzB,oBAAQe,WAAR;AACD;AACF,SATD;;AAWAF,eAAON,OAAP,GAAiB,aAAK;AACpBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAA3B;AACAzB,iBAAO,kCAAP;AACD,SAHD;AAKD,OAvBM,CAAP;AAwBD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACXO,WADW,CACC,OAAKP,MADN,EAEX8B,KAFW,EAAd;AAGAzB,gBAAQI,SAAR,GAAoB;AAAA,iBAAKN,QAAQ,mCAAR,CAAL;AAAA,SAApB;AACAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OATM,CAAP;AAUD","file":"NegociacaoDAO.js","sourcesContent":["class NegociacaoDAO {\n  constructor(connection) {\n    this._connection = connection;\n    this._store = 'negociacoes';\n  }\n\n  adiciona(negociacao) {\n    return new Promise((resolve, reject) => {\n\n      let request = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .add(negociacao);\n      request.onsuccess = e => {\n        resolve();\n      };\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível adicionar a negociação.');\n      };\n    });\n  }\n\n  listaTodos() {\n    return new Promise((resolve, reject) => {\n      let cursor = this._connection.transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .openCursor();\n\n      let negociacoes = [];\n\n      cursor.onsuccess = e => {\n        let atual = e.target.result;\n        if (atual) {\n          var dado = atual.value;\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n          atual.continue();\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      cursor.onerror = e => {\n        console.log(e.target.error.name);\n        reject('Erro ao recuperar as negociações');\n      };\n\n    });\n  }\n\n  apagaTodos() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection.transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .clear();\n      request.onsuccess = e => resolve('Negociações removidas com sucesso');\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível remover as negociações');\n      };\n    });\n  }\n\n\n}\n"]}